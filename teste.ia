!pip install -q google-generativeai gradio pillow

import google.generativeai as genai
from PIL import Image
import gradio as gr

chave = input("Digite sua chave da API Gemini (ex: AIza...): ").strip()
genai.configure(api_key=chave)

modelo_texto = genai.GenerativeModel("gemini-2.5-flash-preview-04-17")
modelo_visao = genai.GenerativeModel("gemini-1.5-flash")

def responder(pergunta, imagem):
try:
if not pergunta.strip():
return "Digite uma pergunta primeiro."

if imagem:  
        resposta = modelo_visao.generate_content([pergunta, Image.open(imagem)])  
    else:  
        resposta = modelo_texto.generate_content(pergunta)  

    return resposta.text  

except Exception as erro:  
    return f"Erro ao gerar resposta:\n{erro}"

css_customizado = """
body { background-color: #1a1a1a; }
.gradio-container { font-family: 'Segoe UI', sans-serif; }
h1 { color: #ff4d4d; }
label { color: #e6e6e6; }
textarea, input[type="file"] {
background-color: #262626;
color: white;
border: 1px solid #ff4d4d;
}
textarea:focus {
border-color: #ff1a1a;
}
"""

interface = gr.Interface(
fn=responder,
inputs=[
gr.Textbox(label="ðŸ’¬ Pergunta (texto ou sobre uma imagem)", placeholder="Ex: O que vocÃª vÃª nesta imagem?", lines=2),
gr.Image(type="filepath", label="ðŸ–¼ Envie uma imagem (opcional)")
],
outputs=gr.Textbox(label="ðŸ¤– Resposta da MauMau.IA"),
title="ðŸ”¥ MauMau.IA ðŸ”¥",
description="Seu assistente de IA com suporte a texto e imagem, usando os modelos Gemini.",
theme="default",
css=css_customizado
)

interface.launch(debug=True)
